name: Release project

on:
    push:
        branches:
            - main
            - dev

jobs:
    create-release:
        name: Create release
        runs-on: ubuntu-latest
        permissions:
            contents: write           # To be able to publish a GitHub Release
            issues: write             # To be able to comment on related issues
            pull-requests: write      # To be able to comment on released pull requests
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: "lts/*"
            -   name: Install Semantic Release
                run: npm install semantic-release@23
            -   name: Install Semantic Release Dependencies
                run: npm install @semantic-release/exec@6 @semantic-release/commit-analyzer@11 @semantic-release/release-notes-generator@12
            -   name: Create and Publish Release
                id: create-release
                run: |
                    npx semantic-release@23
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    create-nuget-package:
        name: Create NuGet Package
        runs-on: ubuntu-latest
        needs: create-release
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   uses: actions/setup-dotnet@v4
                with:
                    dotnet-version: '9.x'
            -   name: Get Latest Tag
                id: previoustag
                uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
                with:
                    fallback: v1.0.0
            -   name: Get version from release tag
                id: get-version
                run: echo "::set-output name=tag::$(echo "${{ steps.previoustag.outputs.tag }}" | cut -c 2-)"
            -   name: Create NuGet Package
                run: dotnet pack -c Release -o ./bin --include-source --include-symbols -p:Version=${{ steps.get-version.outputs.tag }} -p:SymbolPackageFormat=snupkg
            -   name: Upload NuGet Package
                uses: actions/upload-artifact@v4
                with:
                    name: nuget-package
                    path: bin

    upload-nuget-package-to-gh-release:
        name: Upload NuGet Package to GitHub Release
        needs: create-nuget-package
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: Retrieve NuGet Package from artifact
                uses: actions/download-artifact@v4
                with:
                    name: nuget-package
                    path: bin
            -   name: Get Latest Tag
                id: previoustag
                uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
                with:
                    fallback: v1.0.0
            -   name: Zip NuGet Package
                run: zip -r nuget-package.zip bin/*.nupkg bin/*.snupkg
            -   name: Upload NuGet Package to release
                uses: softprops/action-gh-release@v2
                with:
                    files: nuget-package.zip
                    token: ${{ secrets.GITHUB_TOKEN }}
                    tag_name: ${{ steps.previoustag.outputs.tag }}
                    append_body: true

    upload-to-nuget-org:
        name: Upload NuGet Package to NuGet.org
        needs: create-nuget-package
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            -   name: Retrieve NuGet Package from artifact
                uses: actions/download-artifact@v4
                with:
                    name: nuget-package
                    path: bin
            -   name: Upload NuGet Package to NuGet.org
                run: dotnet nuget push bin/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
